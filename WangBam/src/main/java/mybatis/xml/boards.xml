<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boards">

<!-- rersultMap -->
	<!-- 게시글 작성자 + 상품 + 댓글 목록 -->
	<resultMap type="mybatis.vo.BoardsVO" id="findWithBoard">
		<id property="bo_idx" column="bo_idx"/>
		<association property="uvo" javaType="mybatis.vo.UserVO" select="user.findByidx" column="us_idx"/>
		<association property="pvo" javaType="mybatis.vo.ProductVO" select="product.findByid" column="pd_idx"/>
		<collection property="c_list" ofType="mybatis.vo.CommVO" select="comment.find" column="bo_idx"/>
	</resultMap>
<!-- resultMap end -->

<!-- Select -->
	<!-- 등록된 게시글의 갯수 -->
	<select id="allCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM boards_t
		WHERE bo_status = 1
		AND bo_type = #{bo_type} 
	</select>
	
	<!-- 검색한 게시글의 갯수 -->
	<select id="allSearchCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM boards_t
		<where>
            <if test="searchType != null and searchValue != null">
                <choose> <!-- 검색할 요소에 따라 when태그 추가 -->
                    <when test= "searchType == 'title'"> <!-- 제목 검색 -->
                      	bo_title LIKE CONCAT('%',#{searchValue},'%') AND
                    </when>
                    <when test= "searchType == 'writer'"> <!-- 작성자 닉네임 검색 -->
                        us_idx in (select us_idx from user_t where us_nickname like CONCAT('%', #{searchValue}, '%')) AND
                    </when>
                    <when test= "searchType == 'writeDate'"> <!-- 날짜 검색 -->
                        bo_write_date BETWEEN #{searchValue} and #{searchValue2} AND
                    </when>
                    <when test= "searchType == 'score'"> <!-- 평점 검색 -->
                        bo_score = #{searchValue} AND
                    </when>
                    <when test= "searchType == 'answer'"> <!-- 미답변 목록 검색 -->
                        bo_answer = 1 AND
                    </when>
                </choose>
            </if>
			bo_status = 1 AND bo_type = #{bo_type}
		</where>
	</select>

	<!-- 조회할 게시글 + 검색조건 + 작성자 닉네임 + 댓글 + 상품 -->
	<select id="find" parameterType="map" resultMap="findWithBoard"> 
		SELECT *
		FROM (
        	SELECT @RN:=@RN+1 AS rnum, a.*
        	FROM (
            	SELECT *
            	FROM boards_t
            	<where>
            	bo_status = 1 AND bo_type = #{bo_type} 
            		<if test="searchType != null and searchValue != null">
		                <choose><!-- 검색할 요소에 따라 when태그 추가 -->
		                    <when test= "searchType == 'title'"> <!-- 제목 검색 -->
		                      	AND bo_title LIKE CONCAT('%',#{searchValue},'%')
		                    </when>
		                    <when test= "searchType == 'writer'"> <!-- 작성자 닉네임 검색 -->
		                        AND us_idx in (select us_idx from user_t where us_nickname like CONCAT('%', #{searchValue}, '%'))
		                    </when>
		                    <when test= "searchType == 'writeDate'"> <!-- 날짜 검색 -->
		                        AND bo_write_date BETWEEN #{searchValue} and #{searchValue2}
		                    </when>
		                    <when test= "searchType == 'score'"> <!-- 평점 검색 -->
		                        AND bo_score = #{searchValue}
		                    </when>
		                    <when test= "searchType == 'answer'"> <!-- 미답변 목록 검색 -->
		                        AND bo_answer = 1
		                    </when>
		                </choose>
		            </if>
            	</where>
            	ORDER BY bo_idx DESC
        	) a, (SELECT @RN:=0) b
    	) c
		<where>
			c.rnum BETWEEN #{begin} AND #{end}
		</where>
	</select>
	
	<!-- (유저) 자신이 적은 문의사항 목록 + 작성자 닉네임 + 상품 + 댓글 -->
	<select id="findUserQuestion" parameterType="map" resultMap="findWithBoard">
		SELECT *
		FROM (
        	SELECT @RN:=@RN+1 AS rnum, a.*
        	FROM (
            	SELECT *
            	FROM boards_t
            	WHERE bo_status = 1 AND bo_type = 1
            	ORDER BY bo_idx DESC
        	) a, (SELECT @RN:=0) b
    	) c
		<where>
			c.rnum BETWEEN #{begin} AND #{end} AND us_idx = #{us_idx}
			<if test="searchType != null and searchValue != null">
				<choose>
					<when test= "searchType == title"> <!-- 제목 검색 -->
						bo_title LIKE CONCAT('%',#{searchValue},'%')
					</when>
					<when test= "searchType == writeDate"> <!-- 날짜 검색 -->
						bo_write_date BETWEEN #{searchValue} and #{searchValue2}
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 게시글 상세보기 -->
	<select id="findByidx" parameterType="String" resultType="mybatis.vo.BoardsVO">
		SELECT *
		FROM boards_t
		WHERE bo_idx = #{bo_idx}
	</select>
<!-- Select end -->

<!-- Insert -->
	<!-- 게시글 작성 -->
	<insert id="add" parameterType="map">
		INSERT INTO boards_t
			(us_idx, pd_idx, bo_type, bo_title, bo_content, bo_write_date, bo_img, bo_score, bo_answer, bo_status)
		VALUES
			(#{us_idx}, #{pd_idx}, #{bo_type}, #{bo_title}, #{bo_content}, NOW(), #{bo_img}, #{bo_score}, 0, #{bo_status})
	</insert>
<!-- Insert end -->

<!-- Update, Delete -->
	<!-- 작성된 게시글 수정 -->
	<update id="update" parameterType="map">
		UPDATE boards_t
		SET	us_idx = #{us_idx}, pd_idx = #{pd_idx}, bo_type = #{bo_type}, bo_title = #{bo_title}, bo_content = #{bo_content},
			bo_write_date = NOW(), bo_img = #{bo_img}, bo_score = #{bo_score}, bo_answer = #{bo_answer}
		WHERE bo_idx = #{bo_idx}
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="delete" parameterType="String">
		UPDATE boards_t
		SET bo_status = 0
		WHERE bo_idx = #{bo_idx}
	</update>
	
	<!-- 조회수 증가 -->
	<update id="hit" parameterType="String">
		UPDATE boards_t
		SET bo_hit = bo_hit+1
		WHERE bo_idx = #{bo_idx}
	</update>
	
	<!-- 문의사항 게시글에 관리자가 답변을 작성한 게시글의 답변 상태 변경 -->
	<update id="updateByidx" parameterType="String">
		UPDATE boards_t
		SET bo_answer = 0
		WHERE bo_idx = #{bo_idx}
	</update>
	
	<!-- 상품상세페이지 문의,리뷰 게시판  -->
	<select id="findBypdidx" parameterType="String" resultType="mybatis.vo.BoardsVO">
		SELECT *
		FROM boards_t 
		WHERE pd_idx = #{pd_idx}
		AND bo_type IN(1,2)
	</select>
<!-- Update, Delete end-->


<!-- 카테고리별 리뷰 조회 -->
	<select id="findReview" parameterType="map" resultMap="findWithBoard"> 
		SELECT *
		FROM (
			SELECT @RN:=@RN+1 AS rnum, a.*
			FROM (
            	SELECT bt.pd_idx, bt.bo_idx, bt.bo_title, bt.us_idx, bt.bo_write_date, bt.bo_score, bo_hit
            	FROM boards_t as bt, (SELECT pd_idx
									  FROM product_t
									<where>
										<if test="ct_idx != 'all'">
									 	ct_idx = #{ct_idx}
										</if>
									</where>) as pt
				WHERE bt.pd_idx = pt.pd_idx
            	AND bo_status = 1 
                AND bo_type = #{bo_type}
        	) a, (SELECT @RN:=0) b
    	) c
        WHERE c.rnum BETWEEN #{begin} AND #{end}
   </select>

	<!-- Select -->
	<!-- 등록된 리뷰글의 갯수 -->
	<select id="countReview" parameterType="String" resultType="int">
	SELECT count(*)
            	FROM boards_t as bt, (SELECT pd_idx
									  FROM product_t
									<where>
										<if test="ct_idx != 'all'">
									 	ct_idx = #{ct_idx}
										</if>
									</where>) as pt
				WHERE bt.pd_idx = pt.pd_idx
            	AND bo_status = 1 
                AND bo_type = 2
	</select>
</mapper>