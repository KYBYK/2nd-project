<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="user">
  	<!-- 유저와 주소를 함께 조회하는 매퍼 -->
    <resultMap id="findwithAddr" type="mybatis.vo.UserVO">
      <id property="us_idx" column="us_idx" />
      <collection property="addr_list" ofType="mybatis.vo.AddressVO" select="addr.findAddrList" column="us_idx" />
    </resultMap>

    <!-- 유저 추가 -->
  	<insert id="add" parameterType="Map" useGeneratedKeys="true" keyProperty="us_idx" keyColumn="us_idx">
  		INSERT INTO user_t(us_name, us_email, us_pwd, us_nickname, us_tel, us_insert_date, us_type, us_status)
  	  VALUES (#{us_name}, #{us_email}, #{us_pwd}, #{us_nickname}, #{us_tel}, now(), 1, 1);
  	</insert>

    <!-- 로그인 -->
    <select id="login" parameterType="Map" resultType="mybatis.vo.UserVO">
      SELECT * FROM user_t WHERE us_email = #{us_email} AND us_pwd = #{us_pwd} AND us_status = 1;
    </select>

    <!-- 아이디 찾기 -->
    <select id="findUserEmail" parameterType="Map" resultType="String">
      SELECT us_email FROM user_t WHERE us_name = #{us_name} and us_tel = #{us_tel} and us_status = 1;
    </select>

    <!-- 비밀번호 찾기 -->
    <select id="findPw" parameterType="Map" resultType="String">
      SELECT us_pwd 
      FROM user_t 
      WHERE us_email = #{us_email} and us_name = #{us_name} and us_tel = #{us_tel} and us_status = 1;
    </select>

    <!-- 유저 전체조회 -->
    <select id="all" resultType="mybatis.vo.UserVO">
        SELECT * FROM user_t WHERE us_status = 1;
    </select>

    <!-- 이메일로 유저 조회 -->
    <select id="findByEmail" parameterType="String" resultType="mybatis.vo.UserVO">
      SELECT * FROM user_t WHERE us_email = #{us_email} AND us_status = 1;
    </select>

    <!-- 닉네임으로 유저 조회 -->
    <select id="findByNickname" parameterType="String" resultType="mybatis.vo.UserVO">
      SELECT * FROM user_t WHERE us_nickname = #{us_nickname} AND us_status = 1;
    </select>

    <!-- find -->
    <select id="searchUserList" parameterType="Map" resultType="mybatis.vo.UserVO">
        SELECT * FROM (
        	SELECT @RN:=@RN+1 AS rnum, a.*
        	FROM (
            	SELECT *
            	FROM user_t
            	<where>
		            <choose>
				        <when test="searchType == 'name'">
				          us_name LIKE CONCAT('%', #{searchValue}, '%') AND
				        </when>
				        <when test="searchType == 'email'">
				          us_email LIKE CONCAT('%', #{searchValue}, '%') AND
				        </when>
				        <when test="searchType == 'tel'">
				          us_tel LIKE CONCAT('%', #{searchValue}, '%') AND
				        </when>
				        <when test="searchType == 'nickname'">
				          us_nickname LIKE CONCAT('%', #{searchValue}, '%') AND
				        </when>
			      	</choose>
		            us_status = 1
		        </where>
        	) a, (SELECT @RN:=0) b
    	) c
        <where>
            <if test="begin != null and end != null">
				c.rnum BETWEEN #{begin} AND #{end}
			</if>
        </where>
    </select>
  
    <select id="findByNameAndTel" parameterType="Map" resultType="mybatis.vo.UserVO">
      SELECT * FROM user_t WHERE us_name = #{us_name} AND us_tel = #{us_tel} AND us_status = 1;
    </select>

    <select id="findByEmailAndName" parameterType="Map" resultType="mybatis.vo.UserVO">
      SELECT * FROM user_t WHERE us_email = #{us_email} AND us_name = #{us_name} AND us_status = 1;
    </select>
    
    <!-- 페이징용 -->
    <select id="count" parameterType="Map" resultType="int">
        SELECT count(*) FROM user_t
        <where>
	        <trim prefixOverrides="AND">
	            <choose>
			        <when test="searchType == 'name'">
			          us_name LIKE CONCAT('%', #{searchValue}, '%')
			        </when>
			        <when test="searchType == 'email'">
			          us_email LIKE CONCAT('%', #{searchValue}, '%')
			        </when>
			        <when test="searchType == 'tel'">
			          us_tel LIKE CONCAT('%', #{searchValue}, '%')
			        </when>
			        <when test="searchType == 'nickname'">
			          us_nickname LIKE CONCAT('%', #{searchValue}, '%')
			        </when>
		      	</choose>
	            AND us_status = 1
	        </trim>
        </where>
    </select>

    <!-- 마이페이지 -->
    <select id="findByidx" parameterType="String" resultType="mybatis.vo.UserVO">
      SELECT * FROM user_t WHERE us_idx = #{us_idx} AND us_status = 1;
    </select>

    <!-- 유저 주소 조회 -->
    <select id="findUserAddr" parameterType="String" resultMap="findwithAddr">
      SELECT * FROM user_t WHERE us_idx = #{us_idx};
    </select>

    <!-- 유저 삭제 -->
    <update id="delete" parameterType="String">
      UPDATE user_t 
      SET us_status = 0 
      WHERE us_idx = #{us_idx};
    </update>

    <!-- 유저 수정 -->
    <update id="update" parameterType="Map">
      UPDATE user_t 
      <set>
      	<if test="us_nickname != null and !us_nickname.equals('')">us_nickname = #{us_nickname},</if>
      	<if test="us_tel != null and !us_tel.equals('')">us_tel = #{us_tel},</if>
      	<if test="us_pwd != null and !us_pwd.equals('')">us_pwd = #{us_pwd},</if>
      </set>
      WHERE us_idx = #{us_idx};
    </update>
    
    <!-- VIP 5명 -->
    <select id="findByVIP" resultType="mybatis.vo.UserVO">
    	select u.us_idx, u.us_name, u.us_tel, SUM(or_total_price) AS us_total_price
		from order_t o INNER JOIN user_t u ON o.us_idx = u.us_idx
		group by us_idx
		order by us_total_price desc
		limit 5;
    </select>
  </mapper>

